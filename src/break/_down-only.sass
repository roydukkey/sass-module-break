// Copyright (c) roydukkey. All rights reserved.
// Licensed under the MIT. See LICENSE file in the project root for full license information.
////
/// @author roydukkey
/// @group api
////

@use 'sass:meta'
@use 'down-between'
@use 'up'
@use 'vertical-sizes' as sizes
@use '../internal'


///
/// Generates a media query rule for the given vertical breakpoint.
///
/// @param {String} $breakpoint - The name of the breakpoint at which the generated rule should break.
/// @return {String}
///
/// @throw `#{$breakpoint}` is not a string.
/// @throw No breakpoint exists by the name `#{$breakpoint}`
///
/// @access public
/// @require down-between.down-between
/// @require internal.next
/// @require internal.to-string
/// @require internal.validate-breakpoint
/// @require up.up
/// @require sizes.$names
///
@function down-only($breakpoint)
	$first: internal.validate-breakpoint('down-only', 'breakpoint', $breakpoint, 'min-height', $must-be-name: true)

	@if meta.type-of($first) != 'map'
		@error $first

	$second: internal.next(sizes.$names, $breakpoint, 'min-height')

	@if $second
		@return down-between.down-between($breakpoint, $second)

	@return up.up($breakpoint)


///
/// Applies a media query rule to the content for the given vertical breakpoint.
///
/// @param {String} $breakpoint - The name of the breakpoint at which the applied rule should break.
///
/// @throw `#{$breakpoint}` is not a string.
/// @throw No breakpoint exists by the name `#{$breakpoint}`
///
/// @access public
/// @require down-between.down-between
/// @require internal.next
/// @require internal.validate-breakpoint
/// @require up.up
/// @require sizes.$names
///
@mixin down-only($breakpoint)
	$first: internal.validate-breakpoint('down-only', 'breakpoint', $breakpoint, 'min-height', true, true)

	@if $first and meta.type-of($first) != 'map'
		// true:cannot-test
		@error $first

	$second: internal.next(sizes.$names, $breakpoint, 'min-height')

	@if $second
		@include down-between.down-between($breakpoint, $second)
			@content

	@else
		@include up.up($breakpoint)
			@content
